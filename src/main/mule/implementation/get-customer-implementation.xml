<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="get-customer-implementationFlow" doc:id="28d7b903-2e44-4f2c-8d1f-7a4095791877" >
		<ee:transform doc:name="Transform Message Request SFDC" doc:id="68af8de5-f8df-4abf-9840-cc7f040db491" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var whereClauseVar = if(vars.requestData.requestQueryParam.customerId != null or vars.requestData.requestQueryParam.status != null or vars.requestData.requestQueryParam.lastModifiedDateTime != null)(true)else(false)
var customerIdVar = if(vars.requestData.requestQueryParam.customerId != null)(true)else(false)
var statusVar = if(vars.requestData.requestQueryParam.status != null)(true)else(false)
var lastModifiedDateTimeVar = if(vars.requestData.requestQueryParam.lastModifiedDateTime != null)(true)else(false)
---
("Select Id,customerId__c, customerName__c, email__c, phone__c, address__c, dob__c, gender__c, status__c, registrationDateTime__c, lastModifiedDateTime__c from CustomerDetails__c" ++ (if(whereClauseVar)(" where")else("")) ++ 
(if(customerIdVar)(" and customerId__c = '" ++ vars.requestData.requestQueryParam.customerId ++ "'") else("")) ++  
(if(statusVar)(" and status__c = '" ++ vars.requestData.requestQueryParam.status ++ "'") else("")) ++
(if(lastModifiedDateTimeVar)(" and lastModifiedDateTime__c > '" ++ vars.requestData.requestQueryParam.lastModifiedDateTime ++ "'") else(""))) replace  ("where and") with ("where")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger before SFDC call" doc:id="78730ee9-1e6a-413b-a38e-58f0e29a0af4" message='#[%dw 2.0&#10;output application/json indent = false  &#10;---  &#10;{  	&#10;    TimeStamp: now(), 	&#10;    transactionId: vars.requestData.requestHeader.transactionid, 	&#10;    AppName: app.name, 	&#10;    BusinessProcessName:  "Customer Registration", 	&#10;    Category:  "Customer", 	&#10;    OriginatingApplication:  "PAPI", 	&#10;    DesinationApplication:  "SFDC", 	&#10;    CustomerId: "NA", 	&#10;    txnState:  "SFDC Request" &#10;}]'/>
		<salesforce:query doc:name="Query Get Custome Details" doc:id="f5ba8221-9923-4096-93ee-0fd8c5116df3" config-ref="Salesforce_Config">
			<salesforce:salesforce-query ><![CDATA[#[payload]]]></salesforce:salesforce-query>
		</salesforce:query>
		<logger level="INFO" doc:name="Logger after SFDC call" doc:id="57203d0f-352c-4739-8a5a-5a9b17936b7a" message='#[%dw 2.0&#10;output application/json indent = false  &#10;---  &#10;{  	&#10;    TimeStamp: now(), 	&#10;    transactionId: vars.requestData.requestHeader.transactionid, 	&#10;    AppName: app.name, 	&#10;    BusinessProcessName:  "Customer Registration", 	&#10;    Category:  "Customer", 	&#10;    OriginatingApplication:  "PAPI", 	&#10;    DesinationApplication:  "SFDC", 	&#10;    CustomerId: "NA", 	&#10;    txnState:  "SFDC Response" &#10;}]'/>
		<ee:transform doc:name="Transform Message Get Cusomer Response" doc:id="d0c8d694-d4b1-4595-a0ed-884b89c1f069" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item,index)->{
	customerId : item.customerId__c,
	customerName: item.customerName__c,
	email: item.email__c,
	phone: item.phone__c,
	address: item.address__c,
	dob: item.dob__c,
	gender: item.gender__c,
	status: item.status__c,
	registrationDateTime: item.registrationDateTime__c,
	lastModifiedDateTime: item.lastModifiedDateTime__c,
	sfdcId: item.Id
	
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="cfc63861-1b5e-443a-abcb-003019daf1f7" type="SALESFORCE:CONNECTIVITY, SALESFORCE:INVALID_INPUT, SALESFORCE:INVALID_RESPONSE, SALESFORCE:NOT_FOUND, SALESFORCE:RETRY_EXHAUSTED, SALESFORCE:TIMEOUT, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
				<logger level="INFO" doc:name="Logger Error" doc:id="5cdbfd36-eb0d-4988-9633-c14020646a30" message='#[%dw 2.0&#10;output application/json indent = false  &#10;---  &#10;{  	&#10;    TimeStamp: now(), 	&#10;    transactionId: vars.requestData.requestHeader.transactionid, 	&#10;    AppName: app.name, 	&#10;    BusinessProcessName:  "Customer Registration", 	&#10;    Category:  "Customer", 	&#10;    OriginatingApplication:  "PAPI", 	&#10;    DesinationApplication:  "SFDC", 	&#10;    CustomerId: "NA", 	&#10;    txnState:  "ERROR" &#10;}]'/>
				<ee:transform doc:name="Transform Message Error" doc:id="d0ca2890-d0c8-4c95-80ee-21392b06572b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"msg": "failed operation from SFDC",
	"code": 500,
	"eventId": vars.requestData.requestHeader.transactionid,
	"error": {
		"type": error.errorType.identifier,
		"title": error.description,
		"details": error.detailedDescription
	}
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[500]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
